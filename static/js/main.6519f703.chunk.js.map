{"version":3,"sources":["imgag/img3.jpg","components/NavBarhai.js","components/ResturentList.js","components/ResturentDetails.js","components/ResturentUpdate.js","components/ResturentSearch.js","components/ResturentCreate.js","components/Login.js","components/Logout.js","components/Home.js","components/Protected.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBarhai","efl","icon","faList","hom","faHome","cer","faPlus","se","faSearch","use","faUser","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","localStorage","getItem","Component","ResturentList","state","list","this","getData","fetch","then","response","json","result","setState","method","resp","alert","el","faEdit","color","lk","faTrash","lik","Table","striped","bordered","hover","map","item","i","name","email","rating","address","onClick","delete","ResturentDetails","ResturentUpdate","props","match","params","headers","body","JSON","stringify","uple","faUpload","onChange","event","target","value","placeholder","update","ResturentSearch","searchData","noData","key","data","length","see","Container","Form","Control","type","search","ResturentCreate","crea","create","Login","password","console","warn","setItem","history","push","login","Logout","clear","Home","homw","src","Im","alt","Protected","Cmp","component","rest","render","App","path","exact","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6519f703.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img3.cb40b70f.jpg\";","import React, { Component } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faList , faHome, faSearch , faPlus , faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport{Nav , Navbar} from \"react-bootstrap\"\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarhai extends Component {\r\n    render() {\r\n\r\n        const efl = <FontAwesomeIcon icon={faList} />\r\n    const hom = <FontAwesomeIcon icon={faHome} />\r\n    const cer = <FontAwesomeIcon icon={faPlus} />\r\n    const se = <FontAwesomeIcon icon={faSearch} />\r\n    const use = <FontAwesomeIcon icon={faUser} />\r\n\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Resto</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\"><Link to=\"/\"> {hom} Home </Link></Nav.Link>\r\n            <Nav.Link href=\"#link\"><Link to=\"/list\"> {efl} List </Link></Nav.Link>\r\n            <Nav.Link href=\"#link\"><Link to=\"/create\"> {cer} Create </Link></Nav.Link>\r\n            <Nav.Link href=\"#link\"><Link to=\"/search\"> {se} Search </Link></Nav.Link>\r\n\r\n            {\r\n              localStorage.getItem('login')?\r\n              <Nav.Link href=\"#link\"><Link to=\"/logout\"> {use} LogOut </Link></Nav.Link>\r\n              :\r\n              <Nav.Link href=\"#link\"><Link to=\"/login\"> {use} LogIn </Link></Nav.Link>\r\n            }\r\n            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport NavBarhai from \"./NavBarhai\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit , faTrash , faList } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class ResturentList extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            list:null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData(){\r\n        fetch(\"http://localhost:3000/resturent\").then((response)=>{\r\n            response.json().then((result)=>{\r\n                this.setState({list:result})\r\n            })\r\n        })\r\n    }\r\n\r\n    delete(id){\r\n        fetch(\"http://localhost:3000/resturent/\"+id, {\r\n            method:\"DELETE\",\r\n            // headers:{\r\n            //   'Content-Type':'application/json'\r\n            // },\r\n          }).then((result)=>{\r\n            result.json().then((resp)=>{\r\n              alert(\"Resturent has been delete\");\r\n              this.getData()\r\n            })\r\n          })\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const el = <FontAwesomeIcon icon={faEdit} color=\"orange\" />\r\n        const lk = <FontAwesomeIcon icon={faTrash} color=\"red\" />\r\n        const lik = <FontAwesomeIcon icon={faList} />\r\n\r\n    return (\r\n      <div>\r\n          <NavBarhai />\r\n        <h1> {lik} Resturent List </h1>\r\n\r\n        {\r\n            this.state.list?\r\n            <div>\r\n                <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>S.No</th>\r\n                    <th>Name</th>\r\n                    <th>Mail ID</th>\r\n                    <th>Rating</th>\r\n                    <th>Address</th>\r\n                    <th>Operations</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    this.state.list.map((item , i)=>\r\n                    // <div>\r\n                    //     <span>{item.name}</span>\r\n                    //     <span>{item.email}</span>\r\n                    //     <span>{item.rating}</span>\r\n                    //     <span>{item.address}</span>\r\n                    // </div>\r\n                    <tr>\r\n                        <td> {item.id} </td>\r\n                        <td> {item.name} </td>\r\n                        <td> {item.email} </td>\r\n                        <td> {item.rating} </td>\r\n                        <td> {item.address} </td>\r\n                        <td> <Link to={\"/update/\" + item.id}> {el} </Link> <span onClick={()=>this.delete(item.id)} > {lk} </span> </td>\r\n                    </tr>\r\n                    )\r\n                }\r\n                </tbody>\r\n                </Table>\r\n            </div>\r\n            :<p>Please wait....</p>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBarhai from \"./NavBarhai\";\r\n\r\nexport default class ResturentDetails extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarhai />\r\n        <h1> Resturent Details </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavBarhai from \"./NavBarhai\";\r\n\r\nexport default class ResturentUpdate extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      address: null,\r\n      rating: null,\r\n      id:null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:3000/resturent/'+this.props.match.params.id).then((response) => {\r\n      response.json().then((result) => {\r\n        this.setState({\r\n          name:result.name,\r\n          email:result.email,\r\n          id:result.id,\r\n          address:result.address,\r\n          rating:result.rating,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  update(){\r\n    fetch(\"http://localhost:3000/resturent/\"+this.state.id, {\r\n      method:\"PUT\",\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify(this.state)\r\n    }).then((result)=>{\r\n      result.json().then((resp)=>{\r\n        alert(\"Resturent has been updated\");\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const uple = <FontAwesomeIcon icon={faUpload} />\r\n\r\n    return (\r\n      <div>\r\n        <NavBarhai />\r\n        <h1> {uple} Resturent Update </h1>\r\n        <div>\r\n          <input onChange={(event) => { this.setState({ name: event.target.value }) }}\r\n            placeholder=\"Restaurant Name\" value={this.state.name} /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ email: event.target.value }) }}\r\n            placeholder=\"Restaurant Email\" value={this.state.email} /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ rating: event.target.value }) }}\r\n            placeholder=\"Restaurant Rating\" value={this.state.rating} /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ address: event.target.value }) }}\r\n            placeholder=\"Restaurant Address\" value={this.state.address} /> <br /><br />\r\n          <button onClick={() => { this.update() }}>Update Restaurant</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport {Table , Form , Container} from \"react-bootstrap\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport NavBarhai from \"./NavBarhai\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit , faTrash ,faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class ResturentSearch extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      searchData:null,\r\n      noData:false\r\n    }\r\n  }\r\n\r\n  search(key){\r\n    fetch(\"http://localhost:3000/resturent?q=\"+key).then((data)=>{\r\n      data.json().then((resp)=>{\r\n        if(resp.length>0)\r\n        {\r\n          this.setState({searchData:resp , noData:false})\r\n        }\r\n        else{\r\n          this.setState({noData:true , searchData:null})\r\n        }\r\n      })\r\n    })   \r\n  }\r\n\r\n  render() {\r\n\r\n    const el = <FontAwesomeIcon icon={faEdit} color=\"orange\" />\r\n    const lk = <FontAwesomeIcon icon={faTrash} color=\"red\" />\r\n    const see = <FontAwesomeIcon icon={faSearch} />\r\n\r\n    return (\r\n      <>\r\n      <NavBarhai />\r\n      <Container>\r\n        <h1> {see} Resturent Search </h1>\r\n        <Form.Control type=\"type\" onChange={(event)=>this.search(event.target.value)} placeholder=\"Search Resturent\" />\r\n        <div>\r\n          {\r\n            this.state.searchData?\r\n            <div>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>S.No</th>\r\n                    <th>Name</th>\r\n                    <th>Mail ID</th>\r\n                    <th>Rating</th>\r\n                    <th>Address</th>\r\n                    <th>Operations</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n              {\r\n                this.state.searchData.map((item)=>\r\n                <tr>\r\n                  <td> {item.id} </td>\r\n                  <td> {item.name} </td>\r\n                  <td> {item.email} </td>\r\n                  <td> {item.rating} </td>\r\n                  <td> {item.address} </td>\r\n                  <td> <Link to={\"/update/\" + item.id}> {el} </Link> <span onClick={()=>this.delete(item.id)} > {lk} </span> </td>\r\n                </tr>\r\n                )\r\n              }\r\n              </tbody>\r\n              </Table>\r\n            </div>\r\n            :\"\"\r\n          }\r\n          {\r\n            this.state.noData?<h3> No Data Found </h3>:null\r\n          }\r\n        </div>\r\n      </Container>\r\n      </>  \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport NavBarhai from \"./NavBarhai\";\r\nexport default class ResturentCreate extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      name: null,\r\n      email: null,\r\n      address: null,\r\n      rating: null,\r\n    }\r\n  }\r\n\r\n  create()\r\n  {\r\n    fetch(\"http://localhost:3000/resturent\", {\r\n      method:\"Post\",\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify(this.state)\r\n    }).then((result)=>{\r\n      result.json().then((resp)=>{\r\n        alert(\"New Resturent has been created\");\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const crea = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    return (\r\n      <div>\r\n        <NavBarhai />\r\n        <h1> {crea} Resturent Create </h1>\r\n          <input onChange={(event) => { this.setState({ name: event.target.value }) }}\r\n            placeholder=\"Restaurant Name\" /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ email: event.target.value }) }}\r\n            placeholder=\"Restaurant Email\" /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ rating: event.target.value }) }}\r\n            placeholder=\"Restaurant Rating\" /> <br /><br />\r\n          <input onChange={(event) => { this.setState({ address: event.target.value }) }}\r\n            placeholder=\"Restaurant Address\" /> <br /><br />\r\n          <button onClick={() => { this.create() }}>Add Restaurant</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport NavBarhai from \"./NavBarhai\";\r\nexport default class Login extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n\r\n    login(){\r\n        console.warn(this.state);\r\n        fetch(\"http://localhost:3000/login?q=\"+this.state.name).then((data)=>{\r\n            data.json().then((resp)=>{\r\n                if(resp.length>0){\r\n                    localStorage.setItem('login' , JSON.stringify(resp))\r\n                    console.warn(this.props.history.push('list'))\r\n                }\r\n                else{\r\n                    alert(\"Please check name and password\");\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const use = <FontAwesomeIcon icon={faUser} />\r\n\r\n        return (\r\n            <div>\r\n                <NavBarhai />\r\n                <h1> {use} Login </h1>\r\n                <input type=\"text\"\r\n                    placeholder=\"enter name\"\r\n                    name=\"user\" onChange={(event) => this.setState({ name: event.target.value })} /> <br /> <br />\r\n                <input\r\n                    placeholder=\"enter password\"\r\n                    type=\"password\" name=\"password\" onChange={(event) => this.setState({ password: event.target.value })} /> <br /> <br />\r\n                <button onClick={() => { this.login() }} >Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n    localStorage.clear();\r\n    return <Redirect to=\"/login\" />\r\n};\r\n\r\nexport default Logout;","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport Im from \"../imgag/img3.jpg\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport NavBarhai from \"./NavBarhai\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    const homw = <FontAwesomeIcon icon={faHome} />;\r\n\r\n    return (\r\n        <div className=\"image\">\r\n          <NavBarhai />\r\n          <h1> {homw} Home Component <br /> <img src={Im} alt=\"res\" /> </h1>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {Redirect , Route} from \"react-router-dom\";\r\n\r\nconst Protected = ({component:Cmp,...rest}) => (\r\n    <Route\r\n    {...rest} \r\n    render={(props)=>\r\n        localStorage.getItem('login')?(\r\n            <Cmp {...props} />\r\n        ):\r\n        <Redirect\r\n        to='/login'\r\n        />\r\n    }\r\n    />\r\n)\r\n\r\nexport default Protected;","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport {BrowserRouter as Router , Route} from \"react-router-dom\";\n\nimport ResturentList from \"./components/ResturentList\";\nimport ResturentDetails from \"./components/ResturentDetails\";\nimport ResturentUpdate from \"./components/ResturentUpdate\";\nimport ResturentSearch from \"./components/ResturentSearch\";\nimport ResturentCreate from \"./components/ResturentCreate\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport Home from \"./components/Home\";\n\nimport Protected from \"./components/Protected\";\n\nexport default class App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Router>\n          {/* <Route path=\"/list\"> <ResturentList /> </Route>\n          <Route path=\"/create\"> <ResturentCreate /> </Route>\n          <Route path=\"/search\"> <ResturentSearch /> </Route>\n          <Route path=\"/details\"> <ResturentDetails /> </Route> */}\n\n          <Route path=\"/logout\"> <Logout /> </Route>\n          \n          {/* <Route \n          render={props=>(<ResturentUpdate {...props} />\n            )}\n          > \n          </Route> */}\n\n          <Route path=\"/login\"\n          render={props=>(<Login {...props} />\n            )}\n          > \n          </Route>\n          \n          <Protected exact path=\"/list\" component={ResturentList} />\n          <Protected exact path=\"/create\" component={ResturentCreate} />\n          <Protected exact path=\"/search\" component={ResturentSearch} />\n          <Protected exact path=\"/details\" component={ResturentDetails} />\n          <Protected exact path=\"/update/:id\" component={ResturentUpdate} />\n          <Protected exact path=\"/\" component={Home} />\n\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}